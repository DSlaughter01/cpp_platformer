TODO NEXT:
Collision system following the steps on chatgpt

Comments:
1\ File Game.cpp, function LoadPlayer. Maybe there is a way to just get the component type and add the component within the function and use it like em.addComponent(e, velocity). Then inside it would be:
    type = arg1.GetComponent();

And in the component there would be a deduce subtype (can this be done?)

2\ File EntityManager.cpp function GetComponent. It would be good to be able to add multiple components at the same time

3\ File Game.cpp function LoadTilemap. Remove 64 and add TILE_DIM (= 64)

4\ File Game.cpp function GameLoop. Combine LoadPlayer and LoadTilemap and maybe some other info into a LoadGame function

5\ File EntityManager.hpp Why do I have 2 sets and 1 vector in CollideEntities etc.?

6\ I took out m_maxFrames from the spritesheet, but maybe it could be good to have this to prevent currentframes from getting too big



Collision detection:
Assuming for the moment that fixed objects do not have a velocity component, but will come back to that later because it is not robust



Adding components to systems to be rendered etc.
Collision system required an unordered map